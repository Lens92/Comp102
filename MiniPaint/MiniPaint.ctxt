#BlueJ class context
comment0.target=MiniPaint
comment0.text=\r\n\ A\ simple\ drawing\ program.\r\n\ The\ user\ can\ select\ from\ a\ variety\ of\ tools\ and\ options\ using\ the\ buttons\ and\r\n\ \ \ elements\ down\ the\ left\ side,\ and\ can\ use\ the\ mouse\ to\ add\ elements\ to\ the\ drawing\r\n\ \ \ according\ to\ the\ current\ tool\ and\ options\r\n\ Note,\ most\ of\ the\ "action"\ in\ the\ program\ happens\ in\ response\ to\ mouse\ events;\r\n\ \ \ the\ buttons,\ textFields,\ and\ sliders\ mostly\ record\ information\ that\ is\ used\r\n\ \ \ later\ by\ the\ mouse\ responding.\r\n
comment1.params=
comment1.target=void\ setupGUI()
comment1.text=\r\n\ Set\ up\ the\ interface\:\ buttons,\ textfields,\ sliders,\r\n\ listening\ to\ the\ mouse\r\n
comment10.params=
comment10.target=void\ doSetFillColor()
comment10.text=Respond\ to\ the\ Fill\ Color\ button
comment11.params=
comment11.target=void\ doToggleFill()
comment11.text=Respond\ to\ the\ Fill/Nofill\ button
comment12.params=v
comment12.target=void\ doSetLineWidth(double)
comment12.text=Respond\ to\ the\ linewidth\ slider
comment13.params=v
comment13.target=void\ doSetTextSize(double)
comment13.text=Respond\ to\ text\ size\ slider
comment14.params=action\ x\ y
comment14.target=void\ doMouse(java.lang.String,\ double,\ double)
comment14.text=\r\n\ Respond\ to\ mouse\ events\r\n\ When\ pressed,\ remember\ the\ position.\r\n\ When\ released,\ draw\ what\ is\ specified\ by\ current\ tool\r\n\ Uses\ the\ value\ stored\ in\ the\ field\ to\ determine\ which\ kind\ of\ tool\ to\ draw.\r\n\ \ It\ should\ call\ the\ drawALine,\ drawARectangle,\ drawAnOval,\ etc,\ methods\r\n\ \ passing\ the\ pressed\ and\ released\ positions\r\n\ [Completion]\ should\ respond\ to\ "dragged"\ events\ also\ to\ do\ erasing\ and\ freehand\ drawing\r\n
comment15.params=x1\ y1\ x2\ y2
comment15.target=void\ drawALine(double,\ double,\ double,\ double)
comment15.text=\ \r\n\ Draw\ a\ line\ between\ the\ two\ positions\ (x1,\ y1)\ and\ (x2,\ y2)\r\n
comment16.params=x1\ y1\ x2\ y2
comment16.target=void\ drawARectangle(double,\ double,\ double,\ double)
comment16.text=\r\n\ Draw\ a\ rectangle\ between\ the\ two\ diagonal\ corners\r\n\ [Completion]\ Works\ out\ the\ left,\ top,\ width,\ and\ height\ \r\n\ Then\ draws\ the\ rectangle,\ based\ on\ the\ options\r\n
comment17.params=x1\ y1\ x2\ y2
comment17.target=void\ drawAnOval(double,\ double,\ double,\ double)
comment17.text=\r\n\ Draw\ an\ oval\ to\ fit\ the\ rectangle\ between\ the\ the\ two\ diagonal\ corners\r\n\ [Completion]\ Works\ out\ the\ left,\ top,\ width,\ and\ height\ \r\n\ Then\ draws\ the\ oval,\ based\ on\ the\ options\r\n
comment18.params=x\ y
comment18.target=void\ drawCaption(double,\ double)
comment18.text=\ \r\n\ Draws\ the\ current\ caption\ at\ the\ mouse\ released\ point.\r\n
comment19.params=x1\ y1\ x2\ y2
comment19.target=void\ drawAnImage(double,\ double,\ double,\ double)
comment19.text=\ [Completion]\r\n\ Draws\ the\ current\ image\ between\ the\ two\ diagonal\ corners,\ unless\r\n\ \ they\ are\ very\ close,\ and\ then\ just\ draws\ the\ image\ at\ its\ natural\ size\r\n\ \ Works\ out\ the\ left,\ top,\ width,\ and\ height\ \r\n\ Then\ draws\ the\ image,\ if\ there\ is\ one.\r\n
comment2.params=
comment2.target=void\ doSetLine()
comment2.text=Respond\ to\ the\ Line\ button
comment20.params=arguments
comment20.target=void\ main(java.lang.String[])
comment3.params=
comment3.target=void\ doSetRect()
comment3.text=Respond\ to\ the\ Rectangle\ button
comment4.params=
comment4.target=void\ doSetOval()
comment4.text=Respond\ to\ the\ Oval\ button
comment5.params=
comment5.target=void\ doSetImage()
comment5.text=Respond\ to\ the\ Image\ button
comment6.params=capt
comment6.target=void\ doSetCaption(java.lang.String)
comment6.text=Respond\ to\ the\ Caption\ button
comment7.params=
comment7.target=void\ doSetFreehand()
comment7.text=Respond\ to\ the\ Freehand\ button
comment8.params=
comment8.target=void\ doSetErase()
comment8.text=Respond\ to\ the\ Eraser\ button
comment9.params=
comment9.target=void\ doSetLineColor()
comment9.text=Respond\ to\ the\ Border\ Color\ button
numComments=21
